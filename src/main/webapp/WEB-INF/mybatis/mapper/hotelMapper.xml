<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="hotel">

<!-- 
<if test="checkin_date1 !=null and checkin_date1='' and checkin_date2 !=null and checkin_date2=''">
			  	  TO_CHAR(checkin_date1, 'YYYY-MM-DD') &gt; #{checkin_date1} and TO_CHAR(checkin_date2, 'YYYY-MM-DD') &lt;  #{checkin_date2}
  </if>

 -->

<select id="listHotel" parameterType="map" resultType="com.sp.hotel.Hotel">
  SELECT * FROM (
         SELECT ROWNUM rnum, tb.* FROM (
         SELECT HRS.STAR, h.hName, h.address1, newT.hcount, newT.price, h.locCode, h.hotelCode , nf.saveFilename, HRS.REVIEW
         FROM hotelInfo h
         JOIN(
            select * from (
              SELECT hotelCode, hcount, min(price) as price, roomcode, rank() over(partition by hotelcode order by min(price)) g
              FROM roomInfo
              GROUP BY hotelCode, hcount, roomcode
          ) where g=1  
         )  newT ON newT.hotelCode=h.hotelCode
         LEFT OUTER JOIN(
            SELECT roomcode, MIN(fileCode) AS fileCode, MIN(saveFilename) AS saveFilename
            FROM roomfile
            GROUP BY roomcode
         )nf ON nf.roomCode=newT.roomCode    
          LEFT OUTER JOIN(
            select AVG(star) AS STAR  , NVL(COUNT(*),0) AS REVIEW, HOTELCODE FROM HREVIEW   
            GROUP BY HOTELCODE
         )HRS ON HRS.HOTELCODE=H.HOTELCODE            
          <where>
               <if test="value!=null and value !=''" >
               (INSTR(h.address1, #{value}) > 0)
               </if>
          </where>
          
          <choose>
           <when test="price_order2=='desc'"> 
            ORDER BY price desc
           </when>
           <when test="price_order1=='asc'"> 
            ORDER BY price asc
           </when>
          </choose>
          <where>
          <if test="checkin !='' and checkout !='' ">
				AND(r.roomCode NOT IN (
                	select roomCode from roomReserInfo where 
<![CDATA[
                        (TO_DATE(TO_CHAR(checkin, 'YYYYMMDD')) >= #{checkin} AND TO_DATE(TO_CHAR(checkout, 'YYYYMMDD')) <= #{checkout}) OR
                        (TO_DATE(TO_CHAR(checkout, 'YYYYMMDD')) >= #{checkin} AND TO_DATE(TO_CHAR(checkout, 'YYYYMMDD')) <= #{checkout})
]]>
                     )
                 )	
</if>          
</where>
<![CDATA[
            )tb WHERE ROWNUM <=#{end}
         )WHERE rnum >=#{start}
]]>
   </select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM hotelInfo
			 <where>
		      	<if test="value!=null and value !=''" >
					(INSTR(address1, #{value}) > 0)
		      	</if>
			 </where>
	</select>
	
	<!-- article 호텔방 리스트 -->
	<select id="readHotel" parameterType="map" resultType="com.sp.hotel.Hotel">
SELECT r.roomCode, rt.roomTypeCode, rt.roomName, r.hCount, r.price, r.information, r.notice, r.cancel_notice, h.hname, r.hotelCode, h.saveFilename
            FROM roomInfo r
            JOIN roomType rt ON rt.roomTypeCode =r.roomTypeCode
            JOIN hotelInfo h ON h.hotelCode=r.hotelCode
				WHERE r.hotelCode = #{hotelCode}
<if test="checkin !='' and checkout !='' ">
				AND( r.roomCode NOT IN (
                	select roomCode from roomReserInfo where 
<![CDATA[
                        (TO_DATE(TO_CHAR(checkin, 'YYYYMMDD')) >= #{checkin} AND TO_DATE(TO_CHAR(checkout, 'YYYYMMDD')) <= #{checkout}) OR
                        (TO_DATE(TO_CHAR(checkout, 'YYYYMMDD')) >= #{checkin} AND TO_DATE(TO_CHAR(checkout, 'YYYYMMDD')) <= #{checkout})
]]>
                     )
                 )	
</if>
	</select>
	
		<select id="readHotelMax" parameterType="Integer" resultType="com.sp.hotel.Hotel">
		         SELECT h.hName, h.address1, newT.hcount, newT.price, h.locCode, h.hotelCode , nf.saveFilename, newT.roomCode, h.information
		         FROM hotelInfo h
		         LEFT OUTER JOIN(
		            SELECT hotelCode, hcount, max(price) as price, max(roomCode) as roomCode
		            FROM roomInfo 
		            GROUP BY hotelCode, hcount
		         ) newT ON newT.hotelCode=h.hotelCode
		         LEFT OUTER JOIN(
		            select roomcode, saveFilename FROM roomfile
		            WHERE fileCode=(SELECT MAX(fileCode) FROM roomfile)
		         )nf ON nf.roomCode=newT.roomCode  
                WHERE h.hotelCode=#{hotelCode}
	</select>
	
	
	<insert id="insertReview1" parameterType="com.sp.hotel.Review">
		INSERT INTO HREVIEW(HotelCode, ReviewNum,  content,  userIdx, star) 
				VALUES (#{hotelCode}, hReview_seq.NEXTVAL, #{content}, #{userIdx}, #{star})
	</insert>
	
	<select id="reviewDataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM HREVIEW
		WHERE hotelCode=#{hotelCode}
	</select>
	
	<select id="listReview" parameterType="map" resultType="com.sp.hotel.Review">
		SELECT * FROM (
            SELECT ROWNUM rnum, tb.* FROM (
         SELECT h.hotelCode, h.content, h.star, h.created, u.userName
         FROM HREVIEW h
         JOIN tb_user u ON u.userIdx=h.userIdx

	     where hotelCode=#{hotelCode}
		 ORDER BY created DESC
<![CDATA[
		      )tb WHERE ROWNUM <=#{end}
		   )WHERE rnum >=#{start}
]]>
	</select>
<!-- 	
	<insert id="insertReserveHotel" parameterType="com.sp.hotel.Hotel">
		INSERT INTO  WISHLISTCODE_DH(wishCode, userIdx, productCode, amount, price, hotelCode)
         VALUES(WISHCODE_DH_SEQ.NEXTVAL, #{userIdx} , #{roomCode}, 1, #{price}, #{hotelCode})	
	</insert>
	
 -->
 
 	<select id="seq_order_master" resultType="Integer">
 		SELECT NVL(ORDERCODE_SEQ.NEXTVAL, 0) FROM dual
 	</select>
 	
 	<select id="listPicture" parameterType="Integer" resultType="com.sp.hotel.Hotel" >
	 	SELECT f.saveFilename, h.saveFilename from roomInfo r
			LEFT OUTER JOIN  roomfile f on f.roomCode=r.roomCode
			LEFT OUTER JOIN hotelInfo h on h.hotelCode=r.hotelCode
			WHERE hotelCode=#{hotelCode}
 	</select>
</mapper>