<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="travel.party">
	<insert id="partyInsert" parameterType="com.sp.travel.party.Party">
		INSERT INTO party(partyCode, subject, content, startDate, endDate, userIdx, max, enabled, confirmCode)
    		VALUES(PARTY_SEQ.NEXTVAL, #{subject}, #{content}, #{startDate}, #{endDate}, #{userIdx}, #{max}, #{enabled}, #{confirmCode})
	</insert>
	
	<!-- sql -->
	<sql id="where-list">
		<choose>
			<when test="searchKey == 'all'">
			   (INSTR(subject, #{searchValue}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0)
			</when>
			<when test="searchKey == 'subject'">
			   INSTR(subject, #{searchValue}) &gt; 0
			</when>
			<when test="searchKey == 'content'">
			    DBMS_LOB.INSTR(content, #{searchValue}) &gt; 0
			</when>
			<when test="searchKey == 'userId'">
			   INSTR(userId, #{searchValue}) &gt; 0
			</when>
			<when test="searchKey == 'userCount'">
			   max = #{searchValue}
			</when>
			<otherwise>
			    (TO_CHAR(${searchKey}, 'YYYYMMDD') = #{searchValue}
		          OR TO_CHAR(${searchKey}, 'YYYY-MM-DD') = #{searchValue})
			</otherwise>
		</choose>
	</sql>
	<!-- /sql -->
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM party p
		JOIN tb_user u ON p.userIdx = u.userIdx
		<where>
			<if test="searchValue != null and searchValue != ''">
	     	    <include refid="where-list"/>
	     	</if>
	     	AND (p.enabled = 0)
		</where>
	</select>
	
	<select id="myParty_dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM party p
		JOIN tb_user u ON p.userIdx = u.userIdx
		<where>
			<if test="searchValue != null and searchValue != ''">
	     	    <include refid="where-list"/>
	     	</if>
	     	AND p.userIdx = #{userIdx}
		</where>
	</select>
	
	<select id="attendParty_dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM party p
		JOIN partyPeople pp
		ON p.partyCode = pp.partyCode
		<where>
			<if test="searchValue != null and searchValue != ''">
	     	    <include refid="where-list"/>
	     	</if>
	     	AND pp.userIdx = #{userIdx}
		</where>
	</select>
	
	<select id="listParty" parameterType="map" resultType="com.sp.travel.party.Party">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT partyCode, subject, content, 
		            TO_CHAR(startDate, 'YYYY-MM-DD') startDate, 
		            TO_CHAR(endDate, 'YYYY-MM-DD') endDate, 
		            p.userIdx,
		            u.roleCode,
		            u.userId,
		            u.userName,
		            TO_CHAR(created, 'YYYY-MM-DD') created, max, p.enabled, confirmCode
		        FROM party p
		        JOIN tb_user u ON p.userIdx = u.userIdx
		        <where>
		        	<if test="searchValue != null and searchValue != ''">
			     	    <include refid="where-list"/>
			     	</if>
		        	AND (p.enabled = 0)
		        </where>
		        ORDER BY partyCode DESC
		<![CDATA[
		    ) tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
		]]>
	</select>
	
	<select id="myListParty" parameterType="map" resultType="com.sp.travel.party.Party">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT partyCode, subject, content, 
		            TO_CHAR(startDate, 'YYYY-MM-DD') startDate, 
		            TO_CHAR(endDate, 'YYYY-MM-DD') endDate, 
		            p.userIdx,
		            u.roleCode,
		            u.userId,
		            u.userName,
		            TO_CHAR(created, 'YYYY-MM-DD') created, max, p.enabled, confirmCode
		        FROM party p
		        JOIN tb_user u ON p.userIdx = u.userIdx
		        <where>
		        	<if test="searchValue != null and searchValue != ''">
			     	    <include refid="where-list"/>
			     	</if>
		        	AND p.userIdx = #{userIdx}
		        </where>
		        ORDER BY partyCode DESC
		<![CDATA[
		    ) tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
		]]>
	</select>
	
	<select id="attendListParty" parameterType="map" resultType="com.sp.travel.party.Party">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT p.partyCode, subject, content, 
		            TO_CHAR(startDate, 'YYYY-MM-DD') startDate, 
		            TO_CHAR(endDate, 'YYYY-MM-DD') endDate, 
		            p.userIdx,
		            u.roleCode,
		            u.userId,
		            u.userName,
		            TO_CHAR(p.created, 'YYYY-MM-DD') created, max, p.enabled, confirmCode
		        FROM party p
		        JOIN tb_user u ON p.userIdx = u.userIdx
                JOIN partyPeople pp ON p.partyCode = pp.partyCode
		        <where>
		        	<if test="searchValue != null and searchValue != ''">
			     	    <include refid="where-list"/>
			     	</if>
		        	AND pp.userIdx = #{userIdx}
		        </where>
		        ORDER BY p.partyCode DESC
		<![CDATA[
		    ) tb WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
		]]>
	</select>

	<select id="listPartyNew" resultType="com.sp.travel.party.Party">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT partyCode, subject, content, 
		            TO_CHAR(startDate, 'YYYY-MM-DD') startDate, 
		            TO_CHAR(endDate, 'YYYY-MM-DD') endDate, 
		            p.userIdx,
		            u.roleCode,
		            u.userId,
		            u.userName,
		            TO_CHAR(created, 'YYYY-MM-DD') created, max, p.enabled, confirmCode
		        FROM party p
		        JOIN tb_user u ON p.userIdx = u.userIdx
		        WHERE (p.enabled = 0)
		        ORDER BY partyCode DESC  
		<![CDATA[
		    ) tb WHERE ROWNUM <= 5
		) WHERE rnum >= 1
		]]>
	</select>
	
		<!-- 파티 게시글 상세 -->
	<select id="detailParty" parameterType="Integer" resultType="com.sp.travel.party.Party">
		SELECT p.partyCode, subject, content, 
		    TO_CHAR(startDate, 'YYYY-MM-DD') startDate, 
		    TO_CHAR(endDate, 'YYYY-MM-DD') endDate, 
		    p.userIdx,
		    u.roleCode,
		    u.userId,
		    u.userName,
		    TO_CHAR(created, 'YYYY-MM-DD') created, max, p.enabled, confirmCode,
		    NVL(partyPeopleCount, 0) partyPeopleCount
		FROM party p
		JOIN tb_user u ON p.userIdx = u.userIdx
		LEFT OUTER JOIN (
		    SELECT partyCode, COUNT(*) partyPeopleCount FROM partyPeople
		    GROUP BY partyCode
		) pp ON p.partyCode = pp.partyCode
		WHERE p.partyCode = #{partyCode}
		AND (p.enabled = 0)
	</select>
	
	<!-- 이전글 -->
	<select id="preReadParty" parameterType="map" resultType="com.sp.travel.party.Party">
		SELECT tb.* FROM (
		    SELECT partyCode, subject
		    FROM party p
		    JOIN tb_user u ON p.userIdx = u.userIdx
		    <where>
				<if test="keyword != null and keyword != '' ">
            		<include refid="where-list"/>
              	</if>
              	AND (partyCode &gt; #{partyCode})
              	AND (p.enabled = 0)
            </where>
		    ORDER BY created ASC
		) tb WHERE ROWNUM=1
	</select>

	<!-- 다음글 -->
	<select id="nextReadParty" parameterType="map" resultType="com.sp.travel.party.Party">
		SELECT tb.* FROM (
		    SELECT partyCode, subject
		    FROM party p
		    JOIN tb_user u ON p.userIdx = u.userIdx
		    <where>
				<if test="keyword != null and keyword != '' ">
            		<include refid="where-list"/>
              	</if>
              	AND (partyCode &lt; #{partyCode})
              	AND (p.enabled = 0)
            </where>
		    ORDER BY created DESC
		) tb WHERE ROWNUM=1
	</select>
	
	<delete id="deleteParty" parameterType="Integer">
		DELETE FROM party WHERE partyCode = #{partyCode}
	</delete>
	
	<update id="updateParty" parameterType="com.sp.travel.party.Party">
		UPDATE party SET
			subject = #{subject},
			content = #{content}
		WHERE partyCode = #{partyCode}
	</update>
	
	<delete id="deleteJoinParty" parameterType="Integer">
		DELETE FROM partyPeople WHERE partyCode = #{partyCode}
	</delete>
	
	<insert id="insertJoinParty" parameterType="map">
		INSERT INTO partyPeople(userIdx, pCode, partyCode, memo)
    		VALUES(#{userIdx}, 0, #{partyCode}, #{memo})
	</insert>
	
	<select id="chkinsertJoinParty" parameterType="map" resultType="map">
		SELECT NVL(COUNT(*), 0) joinPartyCount,
		p.max
		FROM party p
		JOIN partyPeople pp
		ON p.partyCode = pp.partyCode
		WHERE pp.partyCode = #{partyCode}
		GROUP BY p.max
	</select>
	
	<select id="dataCountJoinParty" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*), 0) 
		FROM party p
		JOIN partyPeople pp
		ON p.partyCode = pp.partyCode
		WHERE pp.partyCode = #{partyCode}
	</select>
	
	<select id="listJoinParty" parameterType="map" resultType="com.sp.travel.party.JoinParty">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT pp.partyCode, memo, p.userIdx createdUserIdx, u.userIdx, u.userId, u.userName, 
				    TO_CHAR(pp.created, 'YYYY-MM-DD') created,
				    pCode
				FROM party p
				JOIN partyPeople pp
				ON p.partyCode = pp.partyCode
				JOIN tb_user u
				ON pp.userIdx = u.userIdx
		        WHERE pp.partyCode = #{partyCode}
		    ) tb
		<![CDATA[
		    WHERE ROWNUM <= #{end}
		) WHERE rnum >= #{start}
		]]>
	</select>
	
	<update id="updateJoinParty_accept">
		UPDATE partyPeople SET
		    pCode = 1
		WHERE partyCode = #{partyCode} and userIdx = #{userIdx}
	</update>
	
	<update id="updateJoinParty_refuse">
		UPDATE partyPeople SET
		    pCode = 2
		WHERE partyCode = #{partyCode} and userIdx = #{userIdx}
	</update>
	
	<update id="updateJoinParty_delete">
		UPDATE partyPeople SET
		    pCode = 3
		WHERE partyCode = #{partyCode} and userIdx = #{userIdx}
	</update>
</mapper>