<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tmain">
	
<select id="mainNoticeList" parameterType="map" resultType="com.sp.ticket.Notice">
	select * from (
		select tb.*, rownum rnum from(
			select noticeNum, subject, content, sn.adminIdx, adminName, TO_CHAR(sn.created, 'YYYY-MM-DD') created, hitCount
			from storeNotice sn
			join admin a on sn.adminIdx=a.adminIdx
			order by noticeNum desc
		)tb where rownum &lt;= 1
	) where rnum &gt;= 1
	
</select>
	
<select id="mainQnAList" parameterType="map" resultType="com.sp.ticket.QnABoard">
		SELECT * FROM (
	    	SELECT ROWNUM rnum, tb.* FROM (
	        	SELECT q.QNACODE, q.CATCODE, subject, content, TO_CHAR(created, 'YYYY-MM-DD') created, q.userIdx,
	                userName, hitCount, answercode, answerCreated, answerContent, 
	                NVL(answerCount, 0) answerCount
	        	FROM question q
	        	LEFT OUTER JOIN answer a ON q.qnacode = a.qnacode
	        	JOIN tb_user u ON q.userIdx = u.userIdx
	            LEFT OUTER JOIN (
	                SELECT qe.qnaCode, COUNT(*) answerCount
	                FROM question qe
	                JOIN answer an
	                ON qe.qnaCode = an.qnaCode
	                GROUP BY qe.qnaCode
	            ) qe ON qe.qnaCode = q.qnaCode
					WHERE CATCODE = 1
	        	ORDER BY created DESC  	
		<![CDATA[
	    	) tb WHERE ROWNUM <= 1
		) WHERE rnum >= 1
		]]>
	</select>
	
<select id="mainEventList" parameterType="map" resultType="com.sp.ticket.Event">
	select * from (
		select tb.*, rownum rnum from(
			select eventNum, subject, content, se.adminIdx, TO_CHAR(se.created, 'YYYY-MM-DD') created, endDate, adminName, hitCount
			from storeEvent se
			join admin a on se.adminIdx=a.adminIdx
			order by eventNum desc
		)tb where rownum &lt;= 1
	) where rnum &gt;= 1
	
</select>

<select id="mainBestList" parameterType="map" resultType="com.sp.ticket.Ticket">
	SELECT * FROM (
	    SELECT ROWNUM rnum, tb.* FROM (
	    	SELECT t.ticketCode, ticketName, t.storeCode, detail.price, locCode, s.categoryCode, s.loctitle, sr.star, sr.reviewCount, sf.saveFilename
	    	FROM ticket t
	    	JOIN (
	    			select ticketCode, min(price) as price
	    			FROM ticketDetail
	    			GROUP BY ticketCode
			) detail on detail.ticketCode=t.ticketCode
			JOIN store s ON t.storeCode=s.storeCode
			LEFT OUTER JOIN (       
               		SELECT AVG(star) AS star, NVL(COUNT(*), 0) AS reviewCount, storeCode FROM storeReview
               		GROUP BY storeCode
               ) sr ON sr.storeCode=t.storeCode
            LEFT OUTER JOIN(
                	SELECT storeCode, MIN(fileCode) AS fileCode, MIN(saveFilename) AS saveFilename
		            FROM storefile
		            GROUP BY storeCode
                ) sf ON sf.storeCode=t.storeCode
			ORDER BY sr.star DESC
<![CDATA[				
       )tb WHERE ROWNUM <= 5
     )WHERE rnum >= 1
]]>
	</select>


	
</mapper>