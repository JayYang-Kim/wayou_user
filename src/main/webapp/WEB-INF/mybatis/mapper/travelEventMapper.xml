<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="travelEvent">
	<sql id="search">
		<if test="searchKey=='all'">
			INSTR(SUBJECT,${searchValue}) &gt; 0 or INSTR(CONTENT,${searchValue}) &gt; 0
		</if>
		<if test="searchKey=='subject'">
			INSTR(SUBJECT,${searchValue}) &gt; 0
		</if>
		<if test="searchKey=='content'">
			INSTR(CONTENT,${searchValue}) &gt; 0
		</if>
	</sql>
	
	<select id="eventList" parameterType="map" resultType="com.sp.travel.Event">
		select * from (
			select tb.*, rownum rnum from(
				select eventCode, subject, content, te.adminIdx, te.created, endDate, adminName, hitCount
				from travelEvent te
				join admin a on te.adminIdx=a.adminIdx
				<if test="searchKey!=''">
					<where>
						<include refid="search"/>
					</where>
				</if>
				order by eventCode desc
			)tb where rownum &lt;= #{end}
		) where rnum &gt;= #{start}
		
	</select>
	
	<select id="articleCount" parameterType="map" resultType="Integer">
		select NVL(count(*),0) from travelEvent
		<if test="searchKey!=''">
			<where>
				<include refid="search"/>
			</where>
		</if>
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		update travelEvent set hitCount = hitCount+1 where eventCode=#{eventCode}
	</update>
	
	<select id="eventArticle" parameterType="Integer" resultType="com.sp.travel.Event">
		select eventCode, subject, content, adminIdx, created, startDate, endDate from travelEvent where eventCode=#{eventCode}
	</select>
	
	<select id="eventFiles" parameterType="Integer" resultType="com.sp.travel.EventFile">
		select fileCode, saveFilename from travelEventFile where eventCode=#{eventCode}
	</select>
	
	<insert id="insertReply" parameterType="com.sp.travel.EventReply">
		insert into travelEventReply(replyCode, eventCode, content, userIdx) values(TRAVELEVENTREPLY_SEQ.nextval,#{eventCode},#{content},#{userIdx})
	</insert>
	
	<select id="eventReplys" parameterType="map" resultType="com.sp.travel.EventReply">
		select * from(
			select tb.*, rownum rnum from (
				select replyCode, eventCode, content, ter.userIdx, userName, created 
					from traveleventreply ter
					join tb_user u on ter.userIdx = u.userIdx
					where eventCode=#{eventCode}
					order by replyCode desc
			)tb where rownum &lt;=#{end}
		)where rnum &gt;=#{start}
	</select>
	<select id="replyCount" parameterType="Integer" resultType="Integer">
		select NVL(COUNT(*),0) from travelEventreply where eventCode=#{eventCode}
	</select>
	<delete id="deleteReply" parameterType="com.sp.travel.EventReply">
		delete from travelEventReply where replyCode=${replyCode}
	</delete>
</mapper>